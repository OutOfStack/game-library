version: "2"
output:
  formats:
    text:
      path: stdout
linters:
  enable:
    - asasalint
    - asciicheck
    - bidichk
    - bodyclose
    - contextcheck
    - copyloopvar
    - decorder
    - dogsled
    - dupword
    - durationcheck
    - errname
    - exhaustive
    - fatcontext
    - forcetypeassert
    - ginkgolinter
    - gocheckcompilerdirectives
    - gochecksumtype
    - goconst
    - gocritic
    - godox
    - goheader
    - gomoddirectives
    - gomodguard
    - goprintffuncname
    - gosec
    - gosmopolitan
    - grouper
    - importas
    - inamedparam
    - intrange
    - loggercheck
    - makezero
    - mirror
    - misspell
    - nakedret
    - nilerr
    - nilnil
    - noctx
    - nolintlint
    - nosprintfhostport
    - perfsprint
    - prealloc
    - predeclared
    - promlinter
    - protogetter
    - reassign
    - revive
    - rowserrcheck
    - sloglint
    - spancheck
    - sqlclosecheck
    - staticcheck
    - testableexamples
    - testifylint
    - thelper
    - tparallel
    - unconvert
    - unparam
    - usestdlibvars
    - usetesting
    - wastedassign
    - whitespace
    - zerologlint
  settings:
    errcheck:
      exclude-functions:
        - (*encoding/json.Decoder).Decode
    goconst:
      min-len: 3
      min-occurrences: 3
    govet:
      enable:
        - shadow
  exclusions:
    generated: lax
    rules:
      - path: (.+)\.go$
        text: G115 # integer overflow conversion warnings
      - path: _test\.go
        rules:
          - G104  # errors not checked
        linters:
          - gocyclo
          - errcheck
          - dupl
          - wsl
          - goconst
      - linters:
        - revive # disable "should have a package comment"
        text: "package comment"
      - path: pkg/types/
        linters:
          - revive
        text: "var-naming"
    paths:
      - docs
      - examples$
formatters:
  enable:
    - gci
    - gofmt
    - goimports
  exclusions:
    generated: lax
    paths:
      - docs
      - examples$
